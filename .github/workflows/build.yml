name: Build, Bundle, and Release Action

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: 
  contents: write  # Grants permission to push commits and create releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm ci

      - name: Bundle the action using ncc
        run: npx @vercel/ncc build main.js --out dist

      - name: Commit Bundled Files
        uses: EndBug/add-and-commit@v9
        with:
          message: "chore: update bundled action"
          add: "dist"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Bundled Action Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bundled-action
          path: dist

  release:
    needs: build  # Runs after the build job completes
    if: github.ref == 'refs/heads/main'  # Only run this on main branch pushes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all tags are available

      - name: Determine Next Version
        id: version
        uses: reecetech/version-increment@2024.10.1
        with:
          scheme: semver
          increment: patch  # Options: major, minor, patch
  
      - name: Create and Push Git Tag
        run: |
          NEW_TAG="${{ steps.version.outputs.version }}"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag -a "$NEW_TAG" -m "Automated release $NEW_TAG"
          git push origin "$NEW_TAG"
  
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "Release ${{ steps.version.outputs.version }}"
          generate_release_notes: true
          draft: false
          prerelease: false
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}